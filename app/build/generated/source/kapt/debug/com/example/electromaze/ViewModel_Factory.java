// Generated by Dagger (https://dagger.dev).
package com.example.electromaze;

import com.example.electromaze.data.GyroController;
import com.example.electromaze.data.bluetooth.BluetoothController;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ViewModel_Factory implements Factory<ViewModel> {
  private final Provider<BluetoothController> bControllerProvider;

  private final Provider<GyroController> gControllerProvider;

  public ViewModel_Factory(Provider<BluetoothController> bControllerProvider,
      Provider<GyroController> gControllerProvider) {
    this.bControllerProvider = bControllerProvider;
    this.gControllerProvider = gControllerProvider;
  }

  @Override
  public ViewModel get() {
    return newInstance(bControllerProvider.get(), gControllerProvider.get());
  }

  public static ViewModel_Factory create(Provider<BluetoothController> bControllerProvider,
      Provider<GyroController> gControllerProvider) {
    return new ViewModel_Factory(bControllerProvider, gControllerProvider);
  }

  public static ViewModel newInstance(BluetoothController bController, GyroController gController) {
    return new ViewModel(bController, gController);
  }
}
